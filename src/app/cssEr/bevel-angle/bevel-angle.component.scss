@import '../csser';

// 斜切角
// 渐变实现
.bea-linear {
    width: 200px;
    color: #fff;

    padding: 15px;
    // background-color: #58a;
    background: linear-gradient(-45deg, transparent 15px, #58a 0);

}
.bea-linear2 {
    width: 200px;
    color: #fff;

    padding: 15px;
    background: linear-gradient(-45deg, transparent 15px, #58a 0) right,
                linear-gradient(45deg, transparent 15px, #655 0) left;
    background-size: 50% 100%;
    background-repeat: no-repeat;
}
.bea-linear3 {
    width: 200px;
    color: #fff;

    padding: 15px;
    // background-color: #58a;
    background: linear-gradient(135deg, transparent 15px, #58a 0) top left,
                linear-gradient(-135deg, transparent 15px, #655 0) top right,
                linear-gradient(-45deg, transparent 15px, #58a 0) bottom right,
                linear-gradient(45deg, transparent 15px, #655 0) bottom left;
    background-size: 50% 50%;
    background-repeat: no-repeat;
}

// scss预处理
@mixin beveled-corners($bg, $tl:0, $tr:$tl, $br:$tl, $bl:$tr) {
    background: $bg;
    background: linear-gradient(135deg, transparent $tl, $bg 0) top left,
                linear-gradient(225deg, transparent $tr, $bg 0) top right,
                linear-gradient(-45deg, transparent $br, $bg 0) bottom right,
                linear-gradient(45deg, transparent $bl, $bg 0) bottom left;
    background-size: 50% 50%;
    background-repeat: no-repeat;
}

.bea-linear4 {
    width: 200px;
    color: #fff;

    padding: 15px;
    // @include beveled-corners(#58a, 15px, 5px);
    @include beveled-corners(#58a, 15px);
}

// 圆切角
.bea-radial {
    width: 200px;
    color: #fff;

    padding: 15px;

    background-color: #58a;
    background: radial-gradient(circle at top left, transparent 15px, #58a 0) top left,
                radial-gradient(circle at top right, transparent 15px, #58a 0) top right,
                radial-gradient(circle at bottom right, transparent 15px, #58a 0) bottom right,
                radial-gradient(circle at bottom left, transparent 15px, #58a 0) bottom left;
    background-size: 50% 50%;
    background-repeat: no-repeat;
}


/*---------------------------------------------------------分割线-----------------------------------------------------------------------------------------*/ 


.demo-trapezoid {
    padding: 10px 0;

    .label {
        position: relative;
        display: inline-block;
        padding: .5em 1em .35em;
        color: #fff;
        z-index: 1;

        &::before {
            content: "";
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            background-color: #58a;
            @include transform(scaleY(1.3) perspective(.5em) rotateX(5deg));
            transform-origin: bottom;
            // z-index: -1;置于底层 必须要父元素设置z-index值才会生效 且值必须大于-1 父元素才会在上层
            z-index: -1;
        }
    }
}


/*---------------------------------------------------------分割线-----------------------------------------------------------------------------------------*/ 


.demo-parallelogram {
    padding: 10px 0;

    .label {
        position: relative;
        display: inline-block;
        padding: .5em 1em .35em;
        color: #fff;
        z-index: 1;

        &::before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            background-color: #58a;
            @include transform(skew(-45deg));
            z-index: -1;
        }
    }
}


/*---------------------------------------------------------分割线-----------------------------------------------------------------------------------------*/ 
// 原形镂空
.demo-hollowout-round {
    .demo-row {
        margin: 5px;
    }
    @mixin hollow-circle-vertical($color,$r,$height,$top) {
        height: $height;
        position: relative;
        background: radial-gradient(circle at right bottom, transparent $r, $color 0) top right / 51% $top no-repeat,
        radial-gradient(circle at left bottom, transparent $r, $color 0) top left / 51% $top no-repeat,
        radial-gradient(circle at right top, transparent $r, $color 0) bottom right / 51% ($height - $top) no-repeat,
        radial-gradient(circle at left top, transparent $r, $color 0) bottom left / 51% ($height - $top) no-repeat;
        &::after {
          content: '';
          width: 100%;
          border: 1px dashed #fff;
          position: absolute;
          left: 0;
          top: $top;
        }
      }
    
    @mixin hollow-circle-horizontal($color,$r,$width,$left) {
    width: $width;
    position: relative;
    background: radial-gradient(circle at right top, transparent $r, $color 0) top left / $left 51% no-repeat,
    radial-gradient(circle at right bottom, transparent $r, $color 0) bottom left /$left 51% no-repeat,
    radial-gradient(circle at left top, transparent $r, $color 0) top right /($width - $left) 51% no-repeat,
    radial-gradient(circle at left bottom, transparent $r, $color 0) bottom right /($width - $left) 51% no-repeat;
    &::after{
        content:'';
        height:100%;
        border: 1px dashed #fff;
        position: absolute;
        left:$left;
        top:0;
    }
    }
    
    .hollow-circle-horizontal {
    height: 100px;
    @include hollow-circle-horizontal(#00adb5,10px,300px,60px)
    }

    .hollow-circle-vertical {
    width: 100px;
    @include hollow-circle-vertical(#00adb5,10px, 200px, 50px)
    }
}

// 三角镂空
.demo-hollowout-triangle {
    @function sqrt($r) {
        $x0: 1;
        $x1: $x0;
    
        @for $i from 1 through 10 {
            $x1: $x0 - ($x0 * $x0 - abs($r)) / (2 * $x0);
            $x0: $x1;
        }

        @return $x1 * 1px;
    }
    
    @mixin hollow-triangle-projecture($width,$color) {
        background: linear-gradient(45deg, transparent sqrt($width * $width/2), $color 0) bottom left /50% 100% no-repeat,
        linear-gradient(-45deg, transparent sqrt($width * $width/2), $color 0) bottom right /50% 100% no-repeat;
    }

    @mixin hollow-triangle-sunken($width,$color) {
        background: linear-gradient(-45deg, transparent sqrt($width * $width/2), $color 0) bottom left /50% 100% no-repeat,
        linear-gradient(45deg, transparent sqrt($width * $width/2), $color 0) bottom right /50% 100% no-repeat;
    }

    .hollow-triangle-projecture {
        width: 60px;
        height: 150px;
        @include hollow-triangle-projecture(60, #00adb5)
    }

    .hollow-triangle-sunken {
        width: 60px;
        height: 150px;
        @include hollow-triangle-sunken(60, #00adb5)
    }
}